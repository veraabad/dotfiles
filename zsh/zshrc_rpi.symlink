# Load Zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# --- ENV VARS ---
export PYENV_ROOT="$HOME/.pyenv"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PATH="$PATH:/opt/nvim-linux-arm64/bin"
export LANG=en_US.UTF-8

# --- STARSHIP PROMPT ---
eval "$(starship init zsh)"

# --- PLUGINS ---
# zinit light ohmyzsh/ohmyzsh  # oh-my-zsh core (for compatibility with OMZ plugins)

zinit wait lucid for \
  atload"autoload -Uz compinit; compinit" \
  zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light Aloxaf/fzf-tab 
zinit snippet OMZP::git
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::python
zinit light zdharma-continuum/fast-syntax-highlighting

# --- ALIASES ---
alias ls='eza --icons --group-directories-first'
alias lc='eza --tree'

# --- NEOVIM CONFIG ALIASES ---
alias nvb="NVIM_APPNAME=nvb nvim"
alias NvimTest="NVIM_APPNAME=NvimTest nvim"

# --- PREFERRED EDITOR ---
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='NVIM_APPNAME=NvimTest nvim'
else
  export EDITOR='NVIM_APPNAME=NvimTest nvim'
fi

# --- SSH AGENT TMUX HANDLING ---
if [ -z ${TMUX+x} ]; then
  if [ ! -e ~/.ssh/ssh_auth_sock ] && [ -e "$SSH_AUTH_SOCK" ]; then
    ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
  fi
else
  export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
fi

# --- HISTORY CONFIG ---
HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# --- LOCAL RC FILE ---
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

# --- FZF NEOVIM SWITCHER ---
nvims() {
  items=("default" "nvb" "AstroNvim" "NvimTest")
  config=$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=50% --layout=reverse --border --exit-0)
  if [[ -z $config ]]; then
    echo "Nothing selected"
    return 0
  elif [[ $config == "default" ]]; then
    config=""
  fi
  NVIM_APPNAME=$config nvim "$@"
}

# --- PYENV INIT ---
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init - zsh)"
  eval "$(pyenv virtualenv-init -)"
fi
